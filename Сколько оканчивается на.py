# Ееееее, моя первая лично придуманная динамика))))))))))
# Клевая задача с сайта Полякова

'''
>> В файле записана последовательность натуральных чисел.
Рассматриваются всевозможные группы чисел,
состоящие из любого количества элементов последовательности.
Необходимо найти количество таких групп, для которых сумма элементов оканчивается на 5.
'''

# Идея для решения:
# Динамически считать все суммы таких групп сортируя по последнему числу (таких групп сумм будет ровно 10)
# (нам пофиг на конкретные числа, важны лишь остатки от деления на 10 == %10)



def end(File, n=5):
    """
    :param File: file name
    :param n: оканчивается на ...n
    """
    with open(File, 'r') as f:
        info = list(map(int, f.readlines()))
        dlin = len(info)
        f.seek(0)
        meta = [0]*10         # На каждом индексе лежит counter всех возможных сумм с %10 == индексу
        for i in range(dlin):
            num = info[i]%10  # С каким остатком от деления на 10 пришло число
            helper = meta.copy()
            helper[num] += 1
            for ind in range(len(meta)): # Что произойдет со всеми counters если добавится новый элемент с таким %10
                put_ind = (num + ind)%10
                helper[put_ind] += meta[ind]
            meta = helper
        return meta[n], meta

# ТЕСТОВЫЕ ДАННЫЕ
ans  = 107374272
'''
86
43
49
73
80
16
37
18
39
30
31
78
15
82
83
12
29
24
84
50
88
71
28
19
90
68
10
92
35
53
'''
